{
  "_from": "multichain-node",
  "_id": "multichain-node@2.2.0-version1.0.4",
  "_inBundle": false,
  "_integrity": "sha512-1y9U7SXo8osBD/y7TZF1/4/PMLJJTi7AYVZ6EkTZSV9WfbxP/CAok+AviUCaFBykljKgz1WNRljle4lmDS/5tQ==",
  "_location": "/multichain-node",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "multichain-node",
    "fetchSpec": "latest",
    "name": "multichain-node",
    "raw": "multichain-node",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/multichain-node/-/multichain-node-2.2.0-version1.0.4.tgz",
  "_shasum": "1232dc8fa9a95ce40234362ef1cf9ffde3d15488",
  "_shrinkwrap": null,
  "_spec": "multichain-node",
  "_where": "/home/risabhs/Desktop/OnlineQuiz",
  "author": {
    "name": "Greg Piccolo"
  },
  "bugs": {
    "url": "https://github.com/scoin/multichain-node/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A wrapper for the Multichain JSON-RPC api that parses your input.",
  "devDependencies": {},
  "homepage": "https://github.com/scoin/multichain-node#readme",
  "keywords": [
    "bitcoin",
    "blockchain",
    "multichain",
    "rpc"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "multichain-node",
  "optionalDependencies": {},
  "readme": "A native Javascript client built for Multichain and Bitcoin\n---------------------------------------------------\n\nNote: The current version is compatible with Multichain 1.0.x. For previous versions of Multichain that may be incompatible, see [Releases](https://github.com/scoin/multichain-node/releases).\n\nAll methods from the [Multichain API spec](http://www.multichain.com/developers/json-rpc-api/) are available. This library does not currently contain all bitcoind commands that are not part of the Multichain API spec, and as such is not really suitable for use with bitcoind. If you would like to add these commands, please submit a pull request with tests.\n\nSee [commands.js](https://github.com/scoin/multichain-node/blob/development/lib/commands.js) for all methods and their required / optional parameters. \n\n### Parser\n\nThe library includes a parser so you can pass an unordered object containing the parameters and omit any optional parameters you want, as seen in the examples below. \n\nYou may also pass an ordered array of commands like you would for any JSON RPC client that will not be parsed.\n\n### Promises\n\nAll commands can be supplied a callback. If a callback is not supplied, a native Promise will be returned.\n\n### SSL\n\nSSL is supported. Pass your connection parameters as you would to the [core HTTPS library](https://nodejs.org/api/https.html#https_https_globalagent).\n\n### Usage\n\nTo use in your project:\n\n```\nnpm install multichain-node --save\n```\n\nTo run the tests:\n\nMake sure you have multichain installed, so that `multichaind` and `multichain-util` are on your path.\n\n```\ngit clone <the repo>\nnpm install\nnpm test\n```\n\n### Examples:\n\nMany more examples in `test.js`, but here's some basics:\n       \n```javascript \nlet multichain = require(\"multichain-node\")({\n    port: 6282,\n    host: '127.0.0.1',\n    user: \"multichainrpc\",\n    pass: \"somepass\"\n});\n\nmultichain.getInfo((err, info) => {\n    if(err){\n        throw err;\n    }\n    console.log(info);\n})\n\nmultichain.issue({address: someAddress, asset: \"zcoin\", qty: 50000, units: 0.01, details: {hello: \"world\"}}, (err, res) => {\n    console.log(res)\n})\n\nmultichain.sendAssetFrom({from: someAddress, to: someOtherAddress, asset: \"zcoin\", qty: 5}, (err, tx) => {\n    console.log(tx);\n})\n\nmultichain.getAddresses((err, addresses) => {\n\n    multichain.createMultiSig({nrequired: 2, keys: addresses}, (err, wallet) => {\n        console.log(wallet)\n    })\n    \n})\n\nmultichain.getRawTransaction({txid: someTxId}, (err, tx) => {\n\n    multichain.decodeRawTransaction({\"hexstring\": tx}, (err, dTx) => {\n        console.log(dTx)\n    })\n})\n\n\n```\n### Tests\n\nAll commands are tested. To run the tests, pull the repo and make sure multichaind and multichain-util are on your path.\n\nFrom inside the directory, run `npm test`.\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/scoin/multichain-node.git"
  },
  "scripts": {
    "test": "./test/run"
  },
  "version": "2.2.0-version1.0.4"
}
